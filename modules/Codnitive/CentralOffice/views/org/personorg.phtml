<?php

use kartik\grid\GridView;
use kartik\grid\SerialColumn;
use yii\widgets\Pjax;

/* @var $this yii\web\View */
/* @var $model app\modules\Codnitive\CentralOffice\models\coding\ */
/* @var $form yii\widgets\ActiveForm */
/* @var $all_org array */
/* @var $code_name string */
/* @var $block */
/* @var $dataProvider yii\data\ActiveDataProvider */
/* @var $searchModel app\modules\Codnitive\CentralOffice\models\coding\CodingrelationSearch */
?>
<?php
$script = <<<JS
// $(document).off('change','#org_relation');
// $(document).off('change','#org_relation_index');
JS;
$this->registerJs($script);
?>

<?= $this->renderAjax('relation_add.phtml', [
    'model' => $model,
    'code_name' => $code_name,
    'block' => $block,
    'all_org' => $all_org,
]) ?>

<div class="org_relation_index">
    <?php Pjax::begin(['id' => 'org_relation_index', 'timeout' => false]); ?>
    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>

    <?= /** @noinspection PhpUnhandledExceptionInspection */
    GridView::widget([
        'id' => 'db_grid_org_relation',
        'dataProvider' => $dataProvider,
        'filterModel' => $searchModel,
        'hover' => true,
        'responsive' => true,
        'resizableColumns' => true,
        'persistResize' => true,
        'pjax' => false,
        'pager' => [
            'firstPageLabel' => 'اولین',
            'lastPageLabel' => 'آخرین',
            'nextPageLabel' => 'صفحه بعد',
            'prevPageLabel' => 'صفحه قبل'
        ],
//        'layout' => '\n{summary}\n{pager}',
        'export' => [
            'fontAwesome' => true,
            'icon' => '',
            'label' => __('centraloffice', 'Export to'),
            'menuOptions' => ['class' => 'dropdown-menu dropdown-menu-left'],
        ],
        'toggleDataOptions' => [
            'all' => [
                'icon' => 'fa fa-arrows',
                'label' => __('centraloffice', 'Full Page'),
//                'class' => '',
                'title' => __('centraloffice', 'Full Page Show'),
            ],
            'page' => [
                'icon' => 'fa fa-clone',
                'label' => __('centraloffice', 'Pagination'),
//                'class' => '',
                'title' => __('centraloffice', 'Pagination Show'),
            ],
        ],
        'toggleDataContainer' => ['class' => 'btn-group-sm'],
        'exportContainer' => ['class' => 'btn-group-sm float-left'],
        'showPageSummary' => true,
        'resizeStorageKey' => Yii::$app->user->id . '-' . date("m"),
        'options' => [
            'id' => 'grid_view',
        ],
//        'rowOptions' => function ($model, $key, $index, $gird) {
//            $contextMenuId = $gird->columns[0]->contextMenuId;
//            return ['data' => ['toggle' => 'context', 'target' => "#" . $contextMenuId]];
//        },
        'columns' => [
            [
                'class' => SerialColumn::className(),
            ],
            [
                'attribute' => 'id',
                'hidden' => true,
            ],
            [
                'label' => 'نام پرسنل',
                'attribute' => 'name_first',
                'hAlign' => 'right',
                'vAlign' => 'middle',
                'width' => '75%',
                'noWrap' => true,
            ],
            [
                'attribute' => 'create_at',
                'value' => function ($model) {
                    $dateParts = explode(' ', tools()->getFormattedDate($model->create_at, 'Y-m-d H:i'));
                    return str_replace('-', '/', (new \app\modules\Codnitive\Calendar\models\Persian())->getDate($dateParts[0]));
                }
            ],
            ['class' => 'yii\grid\ActionColumn', 'header' => '', 'template' => '{view_description}',
                'buttons' =>
                    [
                        'view_description' => function ($url, $model) {
                            return '<button title="' . __('account', 'Delete') . '" 
                             style = "margin:0; padding: 0 5px"
                             onclick="Delete_relation(this)" data-id="' .
                                $model->id .
                                '" class="btn btn-xs btn-danger" >'
                                . '×' /* __('account', 'Delete') */ .
                                '</button>';
                        }
                    ],
            ],
        ],
        'panel' => [
            'type' => GridView::TYPE_SUCCESS,
        ],
        'panelTemplate' => '{panelHeading}{items}{panelFooter}',
        'panelHeadingTemplate' => '
                        <button class="pull-left btn-sm btn-bitbucket p-0 m-0" 
                                style="position: relative;top: -17px!important;font-size: 7pt;"
                                onclick="delete_all();"> 
                            ' . __('account', 'delete all') . '  
                        </button>                 
                    ',
        'panelFooterTemplate' =>
            '{pager}{summary}{toggleData}',
    ]); ?>
    <?php Pjax::end(); ?>


<?php
$Del_relation = tools()->getBaseUrl() . tools()->getUrl('centraloffice/org/delorgrelation');;
    $DelAll_relation = tools()->getBaseUrl() . tools()->getUrl('centraloffice/org/delorgrelation');;
$script = <<<JS
    function Delete_relation(tag){
        var url = '$Del_relation',
        data_id = $(tag).data('key') !== undefined ? $(tag).data('key') : $(tag).data('id') ,
        data = {id:data_id};
        NProgress.start();
        Swal.fire(
            before_del
            ).then(result => {
                if (result.value) {
                    $.post(url,data,function(msg) {
                        $.pjax.reload({container:'#org_relation_index',async:false});
                        $.pjax.reload({container:'#org_relation',async:false});
                        Swal.fire(after_del);
                    });
                } else {
                    NProgress.done();
                }
            });
        NProgress.done();
    }
    
    function delete_all() {
        var all_data = [],
        url = '$DelAll_relation',
        data_id = $("td.kv-grid-hide.grid_view[data-col-seq=1]");
        data_id.each(function(i,val) {
          all_data.push(val.textContent);
        })
        data = {all:all_data};
        NProgress.start();
        Swal.fire(
            before_del
            ).then(result => {
                if (result.value) {
                    $.post(url,data,function(msg) {
                        $.pjax.reload({container:'#org_relation_index',async:false});
                        Swal.fire(after_del);
                    });
                } else {
                    NProgress.done();
                }
            });
        NProgress.done();      
    }
JS;
$this->registerJs($script);
?>
</div>