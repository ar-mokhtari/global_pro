# # security fix:
# # https://geekflare.com/add-x-frame-options-nginx/
# # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
add_header X-Frame-Options SAMEORIGIN;
add_header X-XSS-Protection "1; mode=block";
add_header X-Content-Options nosniff;
add_header X-Content-Type-Options nosniff;

# for more security add these to nginx.conf file
# https://gist.github.com/plentz/6737338

server {
    charset utf-8;
    client_max_body_size 128M;

    # listen 80;
    # listen [::]:80 ipv6only=on; ## listen for ipv6

    server_name bilit.cooode.run;
    root        /www/bilit/web;
    # root        /www/bilit/web;
    index       index.php;

    #access_log  /path/to/basic/log/access.log;
    #error_log   /path/to/basic/log/error.log;

    location / {
        # rewrite ^/$ $1/fa permanent;
        rewrite ^/fa$ $1/ permanent;
        rewrite ^/fa(.*)$ $1 permanent;
        # rewrite ^(.*)/$ $1 permanent;
        # # try_files $uri $uri/ /index.php?$args;

        # Redirect everything that isn't a real file to index.php
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # uncomment to avoid processing of calls to non-existing static files by Yii
    location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
        try_files $uri =404;
    }
    #error_page 404 /404.html;


    # >>> caching rules
    # Expire rules for static content

    # cache.appcache, your document html and data
    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires 90s;
        # access_log logs/static.log; # I don't usually include a static log
    }

    # Feed
    location ~* \.(?:rss|atom)$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }
    # >>> caching rules
    

    # deny accessing php files for the /assets directory
    location ~ ^/assets/.*\.php$ {
        deny all;
    }

    # <<< api
    location /api {
        alias /www/bilit/api;
        try_files $uri $uri/ @api;

        error_page 400 @400_json;
        error_page 401 @401_json;
        error_page 403 @403_json;
        error_page 404 @404_json;
        error_page 408 @408_json;
        error_page 418 @418_json;
        error_page 500 @500_json;
        error_page 502 @502_json;
        error_page 503 @503_json;
        error_page 504 @504_json;

        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        }
    }

    location @api {
        rewrite /api/(.*)$ /api/index.php?/$1 last;
    }
    
    location @400_json {
        default_type application/json;
        return 400 '{"error": {"status_code": 400,"status": "Bad Request"}}';
    }
    location @401_json {
        default_type application/json;
        return 401 '{"error": {"status_code": 401,"status": "Unauthorized"}}';
    }
    location @403_json {
        default_type application/json;
        return 403 '{"error": {"status_code": 403,"status": "Forbidden"}}';
    }
    location @404_json {
        default_type application/json;
        return 404 '{"error": {"status_code": 404,"status": "Not Found"}}';
    }
    location @408_json {
        default_type application/json;
        return 408 '{"error": {"status_code": 408,"status": "Request Timeout}}';
    }
    location @418_json {
        default_type application/json;
        return 418 '{"error": {"status_code": 418,"status": "I\'m a teapot"}}';
    }
    location @500_json {
        default_type application/json;
        return 500 '{"error": {"status_code": 500,"status": "Internal Server Error"}}';
    }
    location @502_json {
        default_type application/json;
        return 502 '{"error": {"status_code": 502,"status": "Bad Gateway"}}';
    }
    location @503_json {
        default_type application/json;
        return 503 '{"error": {"status_code": 503,"status": "Service Temporarily Unavailable"}}';
    }
    location @504_json {
        default_type application/json;
        return 504 '{"error": {"status_code": 504,"status": "Gateway Timeout"}}';
    }
    # >>> api

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_pass 127.0.0.1:9000;
        fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        try_files $uri =404;
    }

    location ~* /\. {
        deny all;
    }
    
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/bilit.cooode.run/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bilit.cooode.run/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($request_uri ~ "/api") {
        return 403;
    }

    if ($host = bilit.cooode.run) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name bilit.cooode.run;
    listen 80;
    return 404; # managed by Certbot
}

#include /var/www/tixox.com/nginx-redirects.conf;
